generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id                 String  @id @default(cuid())
  name               String
  phone              String
  email              String
  address            String?
  created_at         DateTime? @default(now())
  updated_at         DateTime? @default(now())
  tickets            Ticket[]

  userId       String?   @map("user_id")
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  
}

model Ticket{
  id                 String    @id @default(cuid())
  name               String
  description        String
  status             String
  created_at         DateTime? @default(now())
  updated_at         DateTime? @default(now())

  customerId         String?   
  customer Customer? @relation(fields: [customerId], references: [id])

  userId       String?   @map("user_id")
  user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  tickets       Ticket[]
  customers     Customer[]
 
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}